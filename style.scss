@import url('https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@400;900&display=swap');

:root {
  --c_green-bg: #365B34;
  --c_orange-bg: #843103;
  --c_gray_bg: #3A393A;

  --c_bej: #DAD4C4;
  --c_black: #0D0B0D;

  --ease-in-out: cubic-bezier(.5, 0, .1, 1);
}

* {
  box-sizing: border-box;
}

html, body, .slider {
  width: 100%;
  height: 100%;
}

body {
  margin: 0;
  padding: 0;

  background-color: var(--c_gray_bg);

  font-family: 'Nunito Sans', Arial, Helvetica, sans-serif;
}

button {
  border: 0;
  margin: 0;

  background-color: transparent;
}

.black-text {
  color: var(--c_black) !important;
}

header {
  position: absolute;
  top: 0;
  left: 0;

  width: 100%;
  padding: 10px;

  display: grid;
  grid-template-columns: 1fr 1fr;

  z-index: 10;

  .logo {
    color: var(--c_bej);
    font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
    font-size: 32px;
    font-weight: bold;

    transition: color 0.4s ease-in-out;
  }

  menu {
    grid-column: 2;

    display: flex;
    justify-content: flex-end;
    padding: 0;
    margin: 0;
    
    @media only screen and (min-width: 800px) {
      justify-content: space-between;
    }
  }

  .menu {

    &::before, &::after {
      content: '';
      display: block;
      width: 28px;
      height: 3px;

      background-color: var(--c_bej);
      transition: background-color 0.4s ease-in-out;
    }

    &::after {
      margin-top: 3px;
    }

    @media only screen and (min-width: 800px) {
      transform: translateX(-50%);
    }
  }

  .subscribe {
    display: none;
    position: relative;
    color: var(--c_bej);
    font-size: 1.6rem;
    font-weight: bold;

    overflow: hidden;

    transition: color 0.4s ease-in-out;

    @media only screen and (min-width: 800px) {
      display: block;
    }

    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;

      width: 100%;
      height: calc(100% - 3px);
      border-bottom: 3px solid var(--c_bej);

      transition: border-color 0.4s ease-in-out;
    }
  }

  &.black-text {
   .logo {
     color: var(--c_black);
   }

   .menu {
    &::before, &::after {
      background-color: var(--c_black);
    }
   }

   .subscribe {
    color: var(--c_black);

    &::before {
      border-color: var(--c_black);
    }
   }
  }
}

.slider {
  position: relative;

  overflow: hidden;
  perspective: 1000px;
}

.slide {
  position: absolute;

  display: grid;
  grid-template-rows: 1.618fr 1fr;

  width: 100%;
  height: 100%;

  background-color: var(--c_green-bg);

  transform-origin: left;
  transition: transform 1.4s var(--ease-in-out);

  z-index: 1;

  @media only screen and (min-width: 1000px) {
    transform-origin: top;
  }

  section {
    display: flex;
    flex-direction: column;
    justify-content: space-between;

    color: var(--c_bej);

    h1 {
      font-size: 20vw;
      line-height: 0.9;

      padding: 0 10.3px;
      margin: 0;
      margin-top: 60px;

      @media only screen and (min-width: 800px) {
        font-size: 10vw;
      }
    }

    p {
      padding: 0 10.3px;
      font-size: 0.5rem;
      font-weight: bold;
      line-height: 1;
      text-transform: uppercase;

      @media only screen and (min-width: 800px) {
        font-size: 1rem;
      }
    }
  }

  picture {
    overflow: hidden;
  }

  img {
    width: 100%;
    height: 100%;

    object-fit: cover;
  }

  .picture {
    background-image: attr(data-image);
    background-size: cover;
    background-position: center;
  }

  &:nth-child(even) {
    background-color: var(--c_orange-bg);
  }

  &-prev, &-next {
    backface-visibility: hidden;
  }

  &-prev {
    transform: translate3d(-100%, 0, 0) rotate3d(0, -1, 0, 90deg);
    transform-origin: right;
    z-index: 2;

    @media only screen and (min-width: 1000px) {
      transform: translate3d(0, -100%, 0) rotate3d(1, 0, 0, 90deg);
      transform-origin: bottom;
    }
  }

  &-next {
    transform: translate3d(100%, 0, 0) rotate3d(0, 1, 0, 90deg);
    transition: none;
    z-index: 0;

    @media only screen and (min-width: 1000px) {
      transform: translate3d(0, 100%, 0) rotate3d(-1, 0, 0, 90deg);
    }
  }
}
