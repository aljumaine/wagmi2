@import url("https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@400;900&display=swap");
:root {
  --c_green-bg: #365B34;
  --c_orange-bg: #843103;
  --c_gray_bg: #3A393A;
  --c_bej: #DAD4C4;
  --c_black: #0D0B0D;
  --ease-in-out: cubic-bezier(.5, 0, .1, 1);
}

* {
  box-sizing: border-box;
}

html, body, .slider {
  width: 100%;
  height: 100%;
}

body {
  margin: 0;
  padding: 0;
  background-color: var(--c_gray_bg);
  font-family: "Nunito Sans", Arial, Helvetica, sans-serif;
}

button {
  border: 0;
  margin: 0;
  background-color: transparent;
}

.black-text {
  color: var(--c_black) !important;
}

header {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  padding: 10px;
  display: grid;
  grid-template-columns: 1fr 1fr;
  z-index: 10;
}
header .logo {
  color: var(--c_bej);
  font-family: Cambria, Cochin, Georgia, Times, "Times New Roman", serif;
  font-size: 32px;
  font-weight: bold;
  transition: color 0.4s ease-in-out;
}
header menu {
  grid-column: 2;
  display: flex;
  justify-content: flex-end;
  padding: 0;
  margin: 0;
}
@media only screen and (min-width: 800px) {
  header menu {
    justify-content: space-between;
  }
}
header .menu::before, header .menu::after {
  content: "";
  display: block;
  width: 28px;
  height: 3px;
  background-color: var(--c_bej);
  transition: background-color 0.4s ease-in-out;
}
header .menu::after {
  margin-top: 3px;
}
@media only screen and (min-width: 800px) {
  header .menu {
    transform: translateX(-50%);
  }
}
header .subscribe {
  display: none;
  position: relative;
  color: var(--c_bej);
  font-size: 1.6rem;
  font-weight: bold;
  overflow: hidden;
  transition: color 0.4s ease-in-out;
}
@media only screen and (min-width: 800px) {
  header .subscribe {
    display: block;
  }
}
header .subscribe::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: calc(100% - 3px);
  border-bottom: 3px solid var(--c_bej);
  transition: border-color 0.4s ease-in-out;
}
header.black-text .logo {
  color: var(--c_black);
}
header.black-text .menu::before, header.black-text .menu::after {
  background-color: var(--c_black);
}
header.black-text .subscribe {
  color: var(--c_black);
}
header.black-text .subscribe::before {
  border-color: var(--c_black);
}

.slider {
  position: relative;
  overflow: hidden;
  perspective: 1000px;
}

.slide {
  position: absolute;
  display: grid;
  grid-template-rows: 1.618fr 1fr;
  width: 100%;
  height: 100%;
  background-color: var(--c_green-bg);
  transform-origin: left;
  transition: transform 1.4s var(--ease-in-out);
  z-index: 1;
}
@media only screen and (min-width: 1000px) {
  .slide {
    transform-origin: top;
  }
}
.slide section {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  color: var(--c_bej);
}
.slide section h1 {
  font-size: 20vw;
  line-height: 0.9;
  padding: 0 10.3px;
  margin: 0;
  margin-top: 60px;
}
@media only screen and (min-width: 800px) {
  .slide section h1 {
    font-size: 10vw;
  }
}
.slide section p {
  padding: 0 10.3px;
  font-size: 0.5rem;
  font-weight: bold;
  line-height: 1;
  text-transform: uppercase;
}
@media only screen and (min-width: 800px) {
  .slide section p {
    font-size: 1rem;
  }
}
.slide picture {
  overflow: hidden;
}
.slide img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}
.slide .picture {
  background-image: attr(data-image);
  background-size: cover;
  background-position: center;
}
.slide:nth-child(even) {
  background-color: var(--c_orange-bg);
}
.slide-prev, .slide-next {
  backface-visibility: hidden;
}
.slide-prev {
  transform: translate3d(-100%, 0, 0) rotate3d(0, -1, 0, 90deg);
  transform-origin: right;
  z-index: 2;
}
@media only screen and (min-width: 1000px) {
  .slide-prev {
    transform: translate3d(0, -100%, 0) rotate3d(1, 0, 0, 90deg);
    transform-origin: bottom;
  }
}
.slide-next {
  transform: translate3d(100%, 0, 0) rotate3d(0, 1, 0, 90deg);
  transition: none;
  z-index: 0;
}
@media only screen and (min-width: 1000px) {
  .slide-next {
    transform: translate3d(0, 100%, 0) rotate3d(-1, 0, 0, 90deg);
  }
}